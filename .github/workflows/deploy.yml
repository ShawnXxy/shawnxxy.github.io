name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job for TypeScript build and deploy
  build-typescript:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[typescript]') || contains(github.event.head_commit.message, '[ts]')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Inject Environment Variables
      run: |
        # Replace placeholders in env-config.js for TypeScript build
        if [ -f "src/js/env-config.js" ]; then
          sed -i "s/\${AZURE_MAPS_SUBSCRIPTION_KEY}/${{ secrets.AZURE_MAPS_SUBSCRIPTION_KEY }}/g" src/js/env-config.js
          sed -i "s/\${GITHUB_TOKEN}/${{ secrets.GITHUB_TOKEN }}/g" src/js/env-config.js
          echo "Environment variables injected for TypeScript build"
        else
          echo "Warning: src/js/env-config.js not found for TypeScript build"
        fi
      env:
        AZURE_MAPS_SUBSCRIPTION_KEY: ${{ secrets.AZURE_MAPS_SUBSCRIPTION_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
  # Job for static files deploy (default mode)
  deploy-static:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[typescript]') && !contains(github.event.head_commit.message, '[ts]') }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Inject Environment Variables
      run: |
        # Replace placeholders in env-config.js for static deployment
        if [ -f "static/js/env-config.js" ]; then
          sed -i "s/\${AZURE_MAPS_SUBSCRIPTION_KEY}/${{ secrets.AZURE_MAPS_SUBSCRIPTION_KEY }}/g" static/js/env-config.js
          sed -i "s/\${GITHUB_TOKEN}/${{ secrets.GITHUB_TOKEN }}/g" static/js/env-config.js
          echo "Environment variables injected for static deployment"
        else
          echo "Warning: static/js/env-config.js not found"
        fi
      env:
        AZURE_MAPS_SUBSCRIPTION_KEY: ${{ secrets.AZURE_MAPS_SUBSCRIPTION_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload static files
      uses: actions/upload-pages-artifact@v3
      with:
        path: './static'
        
  # Unified deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-typescript, deploy-static]
    if: always() && (needs.build-typescript.result == 'success' || needs.deploy-static.result == 'success')
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Create deployment summary
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.build-typescript.result }}" == "success" ]; then
          echo "### âœ… TypeScript Build Mode" >> $GITHUB_STEP_SUMMARY
          echo "- Built from \`src/\` folder" >> $GITHUB_STEP_SUMMARY
          echo "- Deployed from \`dist/\` folder" >> $GITHUB_STEP_SUMMARY
          echo "- Commit message contained \`[typescript]\` or \`[ts]\`" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.deploy-static.result }}" == "success" ]; then
          echo "### âœ… Static Deployment Mode" >> $GITHUB_STEP_SUMMARY
          echo "- Deployed directly from \`static/\` folder" >> $GITHUB_STEP_SUMMARY
          echo "- No build process required" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "*Deployed automatically by GitHub Actions*" >> $GITHUB_STEP_SUMMARY
